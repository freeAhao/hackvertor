package burp.ui;

import burp.Hackvertor;
import burp.JTabbedPaneClosable;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;

public class TestExtensionPanel {

    private int tabCounter = 1;

    private JPanel rootPanel;
    private JTabbedPaneClosable jTabbedPaneClosable;
    private TestHackvertorPanel testHackvertorPanel1;
    private Hackvertor hackvertor;

    public TestExtensionPanel(Hackvertor hackvertor) {
        this.hackvertor = hackvertor;
        $$$setupUI$$$();
        jTabbedPaneClosable.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                if (jTabbedPaneClosable.getSelectedIndex() == -1) {
                    return;
                }
                if (jTabbedPaneClosable.clickedDelete) {
                    jTabbedPaneClosable.clickedDelete = false;
                    if (jTabbedPaneClosable.getTabCount() > 1) {
                        if (jTabbedPaneClosable.getSelectedIndex() == jTabbedPaneClosable.getTabCount() - 1) {
                            jTabbedPaneClosable.setSelectedIndex(jTabbedPaneClosable.getTabCount() - 2);
                        }
                        return;
                    }
                }
                if (jTabbedPaneClosable.getTitleAt(jTabbedPaneClosable.getSelectedIndex()).equals("...")) {
                    tabCounter++;
//                    HackvertorPanel panel = new HackvertorPanel(hackvertor, true);
                    jTabbedPaneClosable.remove(jTabbedPaneClosable.getSelectedIndex());
                    TestHackvertorPanel testHackvertorPanel = new TestHackvertorPanel(hackvertor);
                    jTabbedPaneClosable.addTab(tabCounter + "", testHackvertorPanel.$$$getRootComponent$$$());
                    jTabbedPaneClosable.addTab("...", new JPanel());
                    jTabbedPaneClosable.setSelectedIndex(jTabbedPaneClosable.getTabCount() - 2);
                }
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        jTabbedPaneClosable = new JTabbedPaneClosable();
        rootPanel.add(jTabbedPaneClosable, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        jTabbedPaneClosable.addTab("1", panel1);
        panel1.add(testHackvertorPanel1.$$$getRootComponent$$$(), new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        jTabbedPaneClosable.addTab("...", panel2);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        testHackvertorPanel1 = new TestHackvertorPanel(hackvertor);
    }
}
